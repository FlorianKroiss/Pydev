<doc>
<contents_area>
<h1 class="title">PyDev on Visual Studio Code</h1>

<!-- <image_area></image_area>


<right_area2>
<ul>
PyDev for VSCode may be evaluated for 30 days but must be bought for continued use.<br/>
<br/>
See: <a href="license.html">license info</a> for details.<br/>
<br/>

Licenses may be purchased using Paypal and will be delivered to e-mail specified during the checkout process.<br/>
<br/>
<br/>
Promotional launch licensing price is <strong>USD 10.00</strong>.<br/>
<br/>
<br/>

    <strong>Buy Single-User License</strong><br/>
<br/>

    <ul class="libutton">
        <li class="libutton"><a class="libutton" href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=N929BMNSSUJHE">
        Click to buy using<strong class="libutton">Paypal</strong>
        </a>
        </li>
</ul>

<br/>
<br/>
<br/>

    <strong>Buy Multi-User License</strong><br/>
<br/>

    <ul class="libutton">
        <li class="libutton"><a class="libutton" href="https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&amp;hosted_button_id=ZHYGQQF7728EC">
        Click to buy using<strong class="libutton">Paypal</strong>
        </a>
        </li>
</ul>
<br/>
<br/>

    Note: your license should be delivered within a day after your purchase is completed
    (remember to check your spam folder too). If you don't find it within that timeframe,
    please contact fabiofz (at) gmail (dot) com.

</ul>
</right_area2> -->
<p>Although PyDev is a <strong>Python IDE</strong> commonly used along with <strong>Eclipse</strong>, it's now possible to
leverage the features from <strong>PyDev</strong> on <strong>Visual Studio Code</strong>.</p>
<p>While there are some important features to be added (such as the <strong>debugger</strong>), the current version can
already leverage many features that make <strong>PyDev</strong> unique inside of Visual Studio Code!</p>
<p>See below which features are available and details on getting it running.</p>
<div class="section" id="pydev-on-visual-studio-code-0-0-1">
<h1>PyDev on Visual Studio Code (0.0.1)</h1>
<ul class="simple">
<li><dl class="first docutils">
<dt><strong>Code-completion</strong></dt>
<dd><ul class="first last">
<li>Fast</li>
<li>Context sensitive</li>
<li>Common tokens</li>
<li>Context insensitive with auto import</li>
</ul>
</dd>
</dl>
</li>
<li><dl class="first docutils">
<dt><strong>Code analysis</strong></dt>
<dd><ul class="first last">
<li>Real time</li>
</ul>
</dd>
</dl>
</li>
<li><strong>Go to definition</strong></li>
<li><dl class="first docutils">
<dt><strong>Code formatter</strong></dt>
<dd><ul class="first last">
<li>Fast</li>
<li>Works with line ranges</li>
</ul>
</dd>
</dl>
</li>
<li><strong>Symbols for Workspace</strong></li>
<li><strong>Symbols for open editor</strong></li>
<li><strong>Find references</strong></li>
<li><strong>Quick fix for undefined variables</strong> (adds missing import)</li>
</ul>
</div>
<div class="section" id="planned-features-soon">
<h1>Planned features (soon)</h1>
<ul class="simple">
<li>Launching</li>
<li>PyDev Debugger integration</li>
<li>Hover</li>
</ul>
</div>
<div class="section" id="getting-it-running">
<h1>Getting it running</h1>
<p>The main requisite to run <strong>PyDev</strong> in <strong>Visual Studio Code</strong> is a <strong>Java 8</strong> installation. If you have
it installed, just installing the extension from the <strong>Visual Studio Code Marketplace</strong> may be all that's
needed, but if it doesn't work, you may customize the setting:</p>
<p><strong>python.pydev.java.home</strong></p>
<p>locally to point to the proper <strong>Java Home</strong> in your <strong>Visual Studio Code</strong> installation (note that the <strong>Java Home</strong>
is the directory which contains the <strong>/bin/java</strong> executable).</p>
<p><strong>Note</strong>: you have to restart <strong>Visual Studio Code</strong> after changing this setting.</p>
</div>
<div class="section" id="customizations">
<h1>Customizations</h1>
<p>Right now, it is possible to change the Python executable to be a different executable
(by default, the <strong>python</strong> in the <strong>PATH</strong> will be used). So, if you
want to use a Python installation which is not the default in the PATH, you can customize the setting:</p>
<p><strong>python.pydev.pythonExecutable</strong></p>
<p>to point to a different Python executable.</p>
</div>
<div class="section" id="pythonpath-customization">
<h1>PYTHONPATH customization</h1>
<p>By default, <strong>PyDev</strong> on <strong>Visual Studio Code</strong> will provide code-completion, code-analysis, etc. all based on indexing
info from the folders which are currently in the <strong>PYTHONPATH</strong>, but if none of the folders in the
<strong>PYTHONPATH</strong> are available as root folders inside Visual Studio Code, it will also consider each root folder
from <strong>Visual Studio Code</strong> to be a folder in the <strong>PYTHONPATH</strong> too.</p>
<p>To see information on the current interpreter configured, the command:</p>
<p><strong>PyDev: Show PyDev Configuration Information</strong></p>
<p>may be executed from inside <strong>Visual Studio Code</strong>.</p>
</div>
<div class="section" id="settings">
<h1>Settings</h1>
<ul class="simple">
<li><strong>python.pydev.java.home</strong></li>
</ul>
<blockquote>
<p>If the extension can't find the java executable, this setting can be used to specify the java home folder (which has /bin/java inside it).</p>
<p><strong>Note</strong>: requires restarting vscode</p>
</blockquote>
<ul class="simple">
<li><strong>python.pydev.ls.vmargs</strong></li>
</ul>
<blockquote>
<p>vmargs to the java executable used to launch PyDev.</p>
<p><strong>Note</strong>: requires restarting vscode</p>
</blockquote>
<ul class="simple">
<li><strong>python.pydev.pythonExecutable</strong></li>
</ul>
<blockquote>
The python executable to be used (if not specified, <strong>python</strong> is expected to be in the <strong>PATH</strong>).</blockquote>
<ul class="simple">
<li><strong>python.pydev.pythonPath</strong></li>
</ul>
<blockquote>
<p>A list of folders that should be added to the <strong>PYTHONPATH</strong> and should be considered source folders
(i.e.: folders with the sources meant to be edited by the user).</p>
<p>If not specified, the folders which are in the <strong>PYTHONPATH</strong> and are available below a workspace
in vscode will be considered as source folders (and if there's no match, each workspace folder in
vscode will be considered a source folder).</p>
</blockquote>
<ul class="simple">
<li><strong>python.pydev.forcedBuiltins</strong></li>
</ul>
<blockquote>
A  list of additional modules to be inspected through a shell
(see <a class="reference external" href="http://www.pydev.org/manual_101_interpreter.html#PyDevInterpreterConfiguration-ForcedBuiltins">http://www.pydev.org/manual_101_interpreter.html#PyDevInterpreterConfiguration-ForcedBuiltins</a> for more information).</blockquote>
</div>
</contents_area>



</doc>

